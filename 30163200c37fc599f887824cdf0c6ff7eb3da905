{
  "comments": [
    {
      "key": {
        "uuid": "e534a23f_0ee05be7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/ItsRulesProjectCache.java",
        "patchSetId": 15
      },
      "lineNbr": 43,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-04-24T22:18:24Z",
      "side": 1,
      "message": "Very unusual hierarchy. I would expect this to follow the same structure of the caches in Gerrit:\n- Cache (interface)\n- CacheImpl (implementation)\n- CacheRefresherListener (implement listener and refresh cache)\n\nHere you are mixing up all the three of them in a single class, no SRP",
      "range": {
        "startLine": 43,
        "startChar": 34,
        "endLine": 43,
        "endChar": 72
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d85a1516_a3245a31",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/ItsRulesProjectCache.java",
        "patchSetId": 15
      },
      "lineNbr": 43,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-04-27T01:54:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e534a23f_0ee05be7",
      "range": {
        "startLine": 43,
        "startChar": 34,
        "endLine": 43,
        "endChar": 72
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60618254_2e4599d2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/ItsRulesProjectCache.java",
        "patchSetId": 15
      },
      "lineNbr": 45,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-04-24T22:18:24Z",
      "side": 1,
      "message": "None of the Gerrit cache names have a camel case.\nExample: project_list (not projectList)",
      "range": {
        "startLine": 45,
        "startChar": 44,
        "endLine": 45,
        "endChar": 64
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13194a79_90171691",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/ItsRulesProjectCache.java",
        "patchSetId": 15
      },
      "lineNbr": 45,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-04-27T01:54:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60618254_2e4599d2",
      "range": {
        "startLine": 45,
        "startChar": 44,
        "endLine": 45,
        "endChar": 64
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d40d39e4_97954696",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/ItsRulesProjectCache.java",
        "patchSetId": 15
      },
      "lineNbr": 69,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-04-24T22:18:24Z",
      "side": 1,
      "message": "changes? I believe you\u0027ve mentioned refs/meta/config in the commit message. Why should we capture the changes?",
      "range": {
        "startLine": 69,
        "startChar": 47,
        "endLine": 69,
        "endChar": 59
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b88cecc_1fbf90f8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/ItsRulesProjectCache.java",
        "patchSetId": 15
      },
      "lineNbr": 69,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-04-27T01:54:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d40d39e4_97954696",
      "range": {
        "startLine": 69,
        "startChar": 47,
        "endLine": 69,
        "endChar": 59
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d85225c_665fa325",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/ItsRulesProjectCache.java",
        "patchSetId": 15
      },
      "lineNbr": 70,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-04-24T22:18:24Z",
      "side": 1,
      "message": "Here you are evicting the project cache all the times that a change gets pushed. Do we really want that?",
      "range": {
        "startLine": 70,
        "startChar": 6,
        "endLine": 70,
        "endChar": 57
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "febc68c6_f0f8fa10",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/ItsRulesProjectCache.java",
        "patchSetId": 15
      },
      "lineNbr": 70,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-04-27T01:54:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d85225c_665fa325",
      "range": {
        "startLine": 70,
        "startChar": 6,
        "endLine": 70,
        "endChar": 57
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7aa7090_42bbeb2d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/ItsRulesProjectCache.java",
        "patchSetId": 15
      },
      "lineNbr": 124,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-04-24T22:18:24Z",
      "side": 1,
      "message": "So the general is always added? I thought that if a project had a specific one, the general ones were ignored.",
      "range": {
        "startLine": 124,
        "startChar": 11,
        "endLine": 124,
        "endChar": 64
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dce04ba_a9937873",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/ItsRulesProjectCache.java",
        "patchSetId": 15
      },
      "lineNbr": 124,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-04-27T01:54:18Z",
      "side": 1,
      "message": "We can decide about this behavior but this one is doing what the existing one has always done, i.e., merging the general rules with the specific ones. In that case, we have \u0027actions.config\u0027 (general) and \u0027actions-\u003cits_name\u003e.config\u0027 (specific) located in review_site/etc/its folder. As said, both sets of actions are combined to give the actual rules that apply to all the projects that have enabled integration with the corresponding ITS system. Because of this, they can be considered \"global\" in scope.\n\nIn this case, we have the same two options as above but defined in the refs/meta/config branch and we\u0027re also merging them . The question is if a project can be linked to more than one ITS system (kind of strange but possible). If so, you can have in refs/meta/config \u0027actions.config\u0027, \u0027actions-\u003cits-1\u003e.config\u0027 and \u0027actions-\u003cits-2\u003e.config. For the its-1 plugin, the set of effective rules will be those of \u0027actions.config\u0027 plus \u0027actions-\u003cits-1\u003e.config\u0027. For the its-2 plugin, the set of rules will be those of \u0027actions.config\u0027 plus \u0027actions-\u003cits-2\u003e.config\u0027. If a project could/should not be associated with more than one ITS, then we can simplify this and only the \u0027actions.config\u0027 could be defined at the project level.\n\nIn all the cases, the rules defined at the project level take precedence over those defined globally (i.e., those defined in review_site/etc/its folder) which means that in presence of the first, the latter are not read.",
      "parentUuid": "a7aa7090_42bbeb2d",
      "range": {
        "startLine": 124,
        "startChar": 11,
        "endLine": 124,
        "endChar": 64
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db6e6f39_e1c6a2ad",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/ItsRulesProjectCache.java",
        "patchSetId": 15
      },
      "lineNbr": 124,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-05-02T21:14:49Z",
      "side": 1,
      "message": "I am fine with either of the two behaviours (inherit \u0026 combine OR override), as long as it is backward compatible and well documented :-)",
      "parentUuid": "8dce04ba_a9937873",
      "range": {
        "startLine": 124,
        "startChar": 11,
        "endLine": 124,
        "endChar": 64
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ecea31_417256da",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/ItsRulesProjectCache.java",
        "patchSetId": 15
      },
      "lineNbr": 124,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-05-27T14:16:05Z",
      "side": 1,
      "message": "If we want the behavior to be backward compatible then we need to do inherit and combine.\nDone.",
      "parentUuid": "db6e6f39_e1c6a2ad",
      "range": {
        "startLine": 124,
        "startChar": 11,
        "endLine": 124,
        "endChar": 64
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba3dd9a_9bd66195",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/RuleBase.java",
        "patchSetId": 15
      },
      "lineNbr": 98,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-04-24T22:18:24Z",
      "side": 1,
      "message": "Why don\u0027t we just index the rulesProjectCache by project name as a String instead?",
      "range": {
        "startLine": 98,
        "startChar": 63,
        "endLine": 98,
        "endChar": 95
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "488c9a36_12f26666",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/RuleBase.java",
        "patchSetId": 15
      },
      "lineNbr": 98,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-04-27T01:54:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ba3dd9a_9bd66195",
      "range": {
        "startLine": 98,
        "startChar": 63,
        "endLine": 98,
        "endChar": 95
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5a345be_e5a89c31",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/RuleBase.java",
        "patchSetId": 15
      },
      "lineNbr": 122,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-04-24T22:18:24Z",
      "side": 1,
      "message": "This is going to be very inefficient :-(",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 122,
        "endChar": 14
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecbaa0ea_f413d4d4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/RuleBase.java",
        "patchSetId": 15
      },
      "lineNbr": 122,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-04-27T01:54:18Z",
      "side": 1,
      "message": "Indeed, but it is the way to do it with the current code. That\u0027s why this follow-up change [1] replaces the properties set with a map.\n\n[1] https://gerrit-review.googlesource.com/c/plugins/its-base/+/162370",
      "parentUuid": "d5a345be_e5a89c31",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 122,
        "endChar": 14
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b25624f_af3e8f98",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/RuleBase.java",
        "patchSetId": 15
      },
      "lineNbr": 122,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-05-02T21:14:49Z",
      "side": 1,
      "message": "Yes, but I believe we are relying on this method *a lot more* than before. I an fine in addressing this in a follow-up commit, as long as they are in the same topic and we merge them together.",
      "parentUuid": "ecbaa0ea_f413d4d4",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 122,
        "endChar": 14
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a279dc9a_0bd159a5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/RuleBase.java",
        "patchSetId": 15
      },
      "lineNbr": 122,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-05-27T14:16:05Z",
      "side": 1,
      "message": "In latest patch set, this is already done using a map so no need to iterate a collection anymore.u",
      "parentUuid": "7b25624f_af3e8f98",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 122,
        "endChar": 14
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48270573_5eaf771a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/RulesConfigReader.java",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-04-24T22:18:24Z",
      "side": 1,
      "message": "This is more related to a refactory of the reading of the rules out of rulebase, which i personally like as it separates two concerns.\n\nWorth submitting as a separate commit?",
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c533b18b_6700ef32",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/RulesConfigReader.java",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-04-27T01:54:18Z",
      "side": 1,
      "message": "Done. Extracted to a new change:",
      "parentUuid": "48270573_5eaf771a",
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ef3a3ff_b5a2e396",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/RulesConfigReader.java",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-05-02T21:14:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c533b18b_6700ef32",
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ee1b7c7_2e58bf34",
        "filename": "src/main/resources/Documentation/config-rulebase-common.md",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-04-24T22:18:24Z",
      "side": 1,
      "message": "mentioned above? \"aformentioned\" is a bit difficult to read and less immediate.",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 14
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7182cdd4_b92c0171",
        "filename": "src/main/resources/Documentation/config-rulebase-common.md",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-04-27T01:54:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ee1b7c7_2e58bf34",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 14
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43c3d0d3_9acad3d0",
        "filename": "src/main/resources/Documentation/config-rulebase-common.md",
        "patchSetId": 15
      },
      "lineNbr": 34,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-04-24T22:18:24Z",
      "side": 1,
      "message": "This is quite complex: I believe that it is worth dedicating a separate chapter to describe how the mechanism works, in different paragraphs and with specific examples.",
      "range": {
        "startLine": 28,
        "startChar": 28,
        "endLine": 34,
        "endChar": 13
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76acde67_b632d51a",
        "filename": "src/main/resources/Documentation/config-rulebase-common.md",
        "patchSetId": 15
      },
      "lineNbr": 34,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-04-27T01:54:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43c3d0d3_9acad3d0",
      "range": {
        "startLine": 28,
        "startChar": 28,
        "endLine": 34,
        "endChar": 13
      },
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d7de3bc_299b66f9",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/its/base/workflow/RuleBaseTest.java",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-04-24T22:18:24Z",
      "side": 1,
      "message": "I don\u0027t like that this test is getting modified in the same change: we should add tests for the new functionality and keep the ones for the existing. If we change all tests, for new and existing, we will never be sure that we\u0027re not breaking anything.\n\nTests aren\u0027t tested. Tests are the most fragile part of the code. They are just read and validated visually.",
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81412dc4_2dbecba5",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/its/base/workflow/RuleBaseTest.java",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-04-27T01:54:18Z",
      "side": 1,
      "message": "There are different reasons for changing this test:\n\n* Mainly, to accommodate the fact that RuleBase no longer reads the rules (now done in RulesConfigReader) which simplifies \n  this test\n* To simplify the tests; for example, replacing:\n     List\u003cActionRequest\u003e rule1Match \u003d Lists.newArrayListWithCapacity(1);\n     rule1Match.add(actionRequest1)\n  with:\n     List\u003cActionRequest\u003e expected \u003d ImmutableList.of(actionRequest1)\n  and some other similar cases.\n* To remove some \"implementation leaks\", e.g., asserting logs.\n* To add assertions to tests that were only verifying mocks\n\nSo yes, I agree that changing the tests could look like a bad idea from the \"reproducibility\" point of view but sometimes they need to be modified to reflect the new way the code is done. And while being there, is tempting to do some \"behavior neutral\" changes as those referred in the second point above.\n\nNow in this change, some of those points above are no longer present as they were moved to the change that extracts the reading of the rules from a configuration object from RuleBase.\n\nBut in the end, you\u0027re right that tests are untested and that they need to be evaluated in the context of the code they\u0027re testing to see if they make sense or not and I think that\u0027s always the case.",
      "parentUuid": "9d7de3bc_299b66f9",
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89e54be0_037d5c59",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/its/base/workflow/RuleBaseTest.java",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-05-02T21:14:49Z",
      "side": 1,
      "message": "\u003e There are different reasons for changing this test:\n\u003e \n\u003e * Mainly, to accommodate the fact that RuleBase no longer reads the rules (now done in RulesConfigReader) which simplifies \n\u003e   this test\n\u003e * To simplify the tests; for example, replacing:\n\u003e      List\u003cActionRequest\u003e rule1Match \u003d Lists.newArrayListWithCapacity(1);\n\u003e      rule1Match.add(actionRequest1)\n\u003e   with:\n\u003e      List\u003cActionRequest\u003e expected \u003d ImmutableList.of(actionRequest1)\n\u003e   and some other similar cases.\n\u003e * To remove some \"implementation leaks\", e.g., asserting logs.\n\u003e * To add assertions to tests that were only verifying mocks\n\nOk, makes sense, and I would do in this way:\n\n1. Improve the tests without changing the code (Change #1)\n2. Refactor the code without changing the tests (Change #2)\n\nThose are the basics of TDD and the reasons why it works :-)\n\n\u003e So yes, I agree that changing the tests could look like a bad idea from the \"reproducibility\" point of view but sometimes they need to be modified to reflect the new way the code is done.\n\nThat makes perfect sense.\n\n\u003e And while being there, is tempting to do some \"behavior neutral\" changes as those referred in the second point above.\n\nYes, and you should resist to the temptation and not doing it :-)\n\n\u003e Now in this change, some of those points above are no longer present as they were moved to the change that extracts the reading of the rules from a configuration object from RuleBase.\n\nThat is fine.\n\n\u003e But in the end, you\u0027re right that tests are untested and that they need to be evaluated in the context of the code they\u0027re testing to see if they make sense or not and I think that\u0027s always the case.",
      "parentUuid": "81412dc4_2dbecba5",
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e7411a9_23f69b00",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/its/base/workflow/RulesConfigReaderTest.java",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-04-24T22:18:24Z",
      "side": 1,
      "message": "This isn\u0027t related to this change but rather to the refactoring of the reading of the config from the RuleBase. Extract into separate change?",
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aeeedc62_447322b8",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/its/base/workflow/RulesConfigReaderTest.java",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-04-27T01:54:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e7411a9_23f69b00",
      "revId": "30163200c37fc599f887824cdf0c6ff7eb3da905",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}