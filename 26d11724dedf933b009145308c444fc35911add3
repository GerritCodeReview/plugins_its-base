{
  "comments": [
    {
      "key": {
        "uuid": "8e1f2c66_ae9813f6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-06-11T07:53:22Z",
      "side": 1,
      "message": "Remove one blank",
      "range": {
        "startLine": 7,
        "startChar": 10,
        "endLine": 7,
        "endChar": 11
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66f0619b_12b23112",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2018-06-13T14:27:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8e1f2c66_ae9813f6",
      "range": {
        "startLine": 7,
        "startChar": 10,
        "endLine": 7,
        "endChar": 11
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c790481_3e248af9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 8,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-06-11T07:53:22Z",
      "side": 1,
      "message": "Can you say something more about this change?\nThe previous commit in this chain was trivial and a one-liner was enough. However, this change is bigger and deserves a bit more explanation IMHO.",
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94208b6d_c7862b43",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 8,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2018-06-13T14:27:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c790481_3e248af9",
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e4d8c71_5e7f3464",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/util/PropertyExtractor.java",
        "patchSetId": 5
      },
      "lineNbr": 205,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-06-11T07:53:22Z",
      "side": 1,
      "message": "Project? You mean \u0027gerrit\u0027 here.",
      "range": {
        "startLine": 205,
        "startChar": 42,
        "endLine": 205,
        "endChar": 51
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "428e43c9_876a2742",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/util/PropertyExtractor.java",
        "patchSetId": 5
      },
      "lineNbr": 205,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2018-06-13T14:27:28Z",
      "side": 1,
      "message": "See my comment below.",
      "parentUuid": "6e4d8c71_5e7f3464",
      "range": {
        "startLine": 205,
        "startChar": 42,
        "endLine": 205,
        "endChar": 51
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a769a7e_6692af08",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/util/PropertyExtractor.java",
        "patchSetId": 5
      },
      "lineNbr": 218,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-06-11T07:53:22Z",
      "side": 1,
      "message": "Interesting :-) So basically you put into the event additional properties coming from the issue tracker?",
      "range": {
        "startLine": 218,
        "startChar": 6,
        "endLine": 218,
        "endChar": 61
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad8ff2bb_47ab48cb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/util/PropertyExtractor.java",
        "patchSetId": 5
      },
      "lineNbr": 218,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2018-06-13T14:27:28Z",
      "side": 1,
      "message": "I didn\u0027t find a better name than \u0027event-origin\u0027.\nThe purpose of this property is to prevent double action triggering for a specific event.\n\nFor example:\n\n- the event is a tag creation, i.e. RefUpdatedEvent\n- action \u0027fire-event-on-commit\u0027 listens on RefUdpdatedEvent\n- an action X listens on RefUpdatedEvent\n\nWe want action X to be only triggered by \u0027fire-event-on-commit\u0027.\n\nIf the tag is created on a commit having an ITS issue number, this would trigger action X twice:\n\n- as a direct listener\n- as an indirect listener subsequent to action \u0027fire-event-on-commit\u0027 action\n\nAlways following the example, adding a condition \u0027event-origin \u003d project\u0027 to action X, allows to execute action X only via \u0027fire-event-on-commit\u0027 and fixes the duplicate trigger issue.\n\nMaybe event-origin could be renamed to \u0027first-responder-action-type\u0027? Since we have now (when the previous change is merged) two kind of actions, at issue level and at project level.",
      "parentUuid": "0a769a7e_6692af08",
      "range": {
        "startLine": 218,
        "startChar": 6,
        "endLine": 218,
        "endChar": 61
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b267be8e_92ec2166",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/util/PropertyExtractor.java",
        "patchSetId": 5
      },
      "lineNbr": 218,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-06-20T07:24:24Z",
      "side": 1,
      "message": "\u003e I didn\u0027t find a better name than \u0027event-origin\u0027.\n\u003e The purpose of this property is to prevent double action triggering for a specific event.\n\u003e \n\u003e For example:\n\u003e \n\u003e - the event is a tag creation, i.e. RefUpdatedEvent\n\u003e - action \u0027fire-event-on-commit\u0027 listens on RefUdpdatedEvent\n\u003e - an action X listens on RefUpdatedEvent\n\u003e \n\u003e We want action X to be only triggered by \u0027fire-event-on-commit\u0027.\n\u003e \n\u003e If the tag is created on a commit having an ITS issue number, this would trigger action X twice:\n\u003e \n\u003e - as a direct listener\n\u003e - as an indirect listener subsequent to action \u0027fire-event-on-commit\u0027 action\n\nExactly, so basically the \u0027project\u0027 source means \"event generated by Gerrit\" and the \u0027issue\u0027 source means \"event generated by the ITS system\", right?\n\n\u003e Always following the example, adding a condition \u0027event-origin \u003d project\u0027 to action X, allows to execute action X only via \u0027fire-event-on-commit\u0027 and fixes the duplicate trigger issue.\n\nYes, because the second event activation is \"internal\" and thus is not triggered.\n\n\u003e Maybe event-origin could be renamed to \u0027first-responder-action-type\u0027? Since we have now (when the previous change is merged) two kind of actions, at issue level and at project level.\n\nI would call it \u0027source\u0027 because it says where it comes from.\nAs values, I would say \u0027gerrit\u0027 or \u0027its\u0027, because one is coming from Gerrit and the other from the ITS plugins. Do you have a rationale behind \u0027project\u0027 and \u0027issue\u0027 names?\n\nP.S. I know, naming is difficult but SO important as well.",
      "parentUuid": "ad8ff2bb_47ab48cb",
      "range": {
        "startLine": 218,
        "startChar": 6,
        "endLine": 218,
        "endChar": 61
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e76b206_ec112cd5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/util/PropertyExtractor.java",
        "patchSetId": 5
      },
      "lineNbr": 218,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2018-06-30T13:40:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b267be8e_92ec2166",
      "range": {
        "startLine": 218,
        "startChar": 6,
        "endLine": 218,
        "endChar": 61
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1903a79_f4d8c42b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/ActionController.java",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-06-11T07:53:22Z",
      "side": 1,
      "message": "Are you breaking encapsulation here? This class was a simple implementation of a published interface. However, now, you access it directly and expose its implementation.",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 73,
        "endChar": 8
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e7522e1_ff74c9bd",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/ActionController.java",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2018-06-13T14:27:28Z",
      "side": 1,
      "message": "The method was reset to private.\nI am using RuleBase and ActionExecutor from FireEventOnCommits now.",
      "parentUuid": "b1903a79_f4d8c42b",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 73,
        "endChar": 8
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4e44eb0_6d908d50",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/ActionController.java",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-06-20T07:24:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9e7522e1_ff74c9bd",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 73,
        "endChar": 8
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfd8f70a_f23df1b8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-06-11T07:53:22Z",
      "side": 1,
      "message": "Have you done some benchmark on large repos?",
      "range": {
        "startLine": 53,
        "startChar": 23,
        "endLine": 53,
        "endChar": 32
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7311ebc_74f799a3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2018-06-13T14:27:28Z",
      "side": 1,
      "message": "Defined large repo :)\nWe have a git repo of 18 millions lines of code aged of 8 years.\nIt works pretty fast.\n\nI understand that repo.getTags() could fetch a lot of tags. Does jgit exposes a method allowing to stream tags instead of collecting them in a huge collection?",
      "parentUuid": "dfd8f70a_f23df1b8",
      "range": {
        "startLine": 53,
        "startChar": 23,
        "endLine": 53,
        "endChar": 32
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3abdceed_39964c56",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-06-20T07:24:24Z",
      "side": 1,
      "message": "\u003e Defined large repo :)\n\u003e We have a git repo of 18 millions lines of code aged of 8 years.\n\u003e It works pretty fast.\n\u003e \n\u003e I understand that repo.getTags() could fetch a lot of tags. Does jgit exposes a method allowing to stream tags instead of collecting them in a huge collection?\n\nYes, the problem is not the number of lines of code, but refs and objects.\nTry for instance with the Linux kernel or even just Gerrit and let me know how it performs :-)",
      "parentUuid": "e7311ebc_74f799a3",
      "range": {
        "startLine": 53,
        "startChar": 23,
        "endLine": 53,
        "endChar": 32
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36dfb8f4_b05cf498",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2018-06-30T13:40:37Z",
      "side": 1,
      "message": "Tried with Gerrit repo, it is instantaneous, no out of memory neither :)",
      "parentUuid": "3abdceed_39964c56",
      "range": {
        "startLine": 53,
        "startChar": 23,
        "endLine": 53,
        "endChar": 32
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5de5ee8_a5097505",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-02-07T11:46:13Z",
      "side": 1,
      "message": "Gerrit does have lots of tags. Can you just create one test with, let\u0027s say 100k tags and see how it goes?\n\nI\u0027m interested to see the impact on CPU and Heap when all tags are read from the repo in memory.",
      "parentUuid": "36dfb8f4_b05cf498",
      "range": {
        "startLine": 53,
        "startChar": 23,
        "endLine": 53,
        "endChar": 32
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "226198fe_f5e188e7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2019-08-15T17:12:32Z",
      "side": 1,
      "message": "Do you want me to write a JUnit test or to perform a manual test?",
      "parentUuid": "b5de5ee8_a5097505",
      "range": {
        "startLine": 53,
        "startChar": 23,
        "endLine": 53,
        "endChar": 32
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a4de01f_0e398466",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2019-08-16T11:11:09Z",
      "side": 1,
      "message": "So I built a git repo with 100k tags.\nI triggered this collector on it.\nThe heap consumption increased by 2.4 GB.\nCPU activity raised to 25%.\n\nYou can take a look at https://imgur.com/gJtgGsl . The push starts at 12:52 pm.\n\nIt would be better to stream the tags from the repo but I didn\u0027t find any JGit method allowing to do that.",
      "parentUuid": "226198fe_f5e188e7",
      "range": {
        "startLine": 53,
        "startChar": 23,
        "endLine": 53,
        "endChar": 32
      },
      "tag": "autogenerated:gerrit:newWipPatchSet",
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "989d8916_6b11af47",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-09-06T23:20:40Z",
      "side": 1,
      "message": "It is definitely too expensive :-(\n\nWe should try to avoid collecting the stream until the very end so that we can at least avoid the memory explosion.",
      "parentUuid": "2a4de01f_0e398466",
      "range": {
        "startLine": 53,
        "startChar": 23,
        "endLine": 53,
        "endChar": 32
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "062b94c9_8d084864",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2019-09-07T16:42:54Z",
      "side": 1,
      "message": "The memory explodes because \u0027repo.getTags()\u0027 returns a collection of all tags instead of a stream.\nIMO, trying to keep a stream after triggering \u0027repo.getTags()\u0027 will not reduce the memory consumption. Looks like to me the only solution is to find an alternative to \u0027repo.getTags()\u0027, but I couldn\u0027t.",
      "parentUuid": "989d8916_6b11af47",
      "range": {
        "startLine": 53,
        "startChar": 23,
        "endLine": 53,
        "endChar": 32
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ee6a391_5db5d40a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-09-10T10:50:58Z",
      "side": 1,
      "message": "\u003e The memory explodes because \u0027repo.getTags()\u0027 returns a collection of all tags instead of a stream.\n\u003e IMO, trying to keep a stream after triggering \u0027repo.getTags()\u0027 will not reduce the memory consumption. Looks like to me the only solution is to find an alternative to \u0027repo.getTags()\u0027, but I couldn\u0027t.\n\nIn a nutshell, you have verified that a repo with 100k tags would consume 2.4GB of heap when you call the repo.getTags() API? Let me try myself.\n\nIf that is true, it means that every single tag uses 2.4k of heap, which it would be very scary.",
      "parentUuid": "062b94c9_8d084864",
      "range": {
        "startLine": 53,
        "startChar": 23,
        "endLine": 53,
        "endChar": 32
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6b167f6_19c1a884",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-09-10T12:53:53Z",
      "side": 1,
      "message": "So, I did the 100k tags test and found out that the getTags() uses 10Mbytes and is very fast. See below my suggestions on how to make this code lighter.",
      "parentUuid": "7ee6a391_5db5d40a",
      "range": {
        "startLine": 53,
        "startChar": 23,
        "endLine": 53,
        "endChar": 32
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd8a5025_3a2313be",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-09-10T12:53:53Z",
      "side": 1,
      "message": "Why are you expecting more than one?",
      "range": {
        "startLine": 58,
        "startChar": 6,
        "endLine": 58,
        "endChar": 20
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef378d10_7f0cb9f3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2020-03-29T16:16:36Z",
      "side": 1,
      "message": "This was collecting \"all tags except the current tag\".\nSo this is why it was expecting multiple tags.\nIt does not matter anymore since this code has been superseded.",
      "parentUuid": "dd8a5025_3a2313be",
      "range": {
        "startLine": 58,
        "startChar": 6,
        "endLine": 58,
        "endChar": 20
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4743c8c0_5434dc71",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-09-10T12:53:53Z",
      "side": 1,
      "message": "Why don\u0027t you just open the currentRef?\n\n  repo.getRefDatabase.exactRef(currentRef)",
      "range": {
        "startLine": 59,
        "startChar": 15,
        "endLine": 62,
        "endChar": 69
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e233a023_9f4778e3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2020-03-29T16:16:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4743c8c0_5434dc71",
      "range": {
        "startLine": 59,
        "startChar": 15,
        "endLine": 62,
        "endChar": 69
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29eafdbf_981c1b79",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2019-09-10T12:53:53Z",
      "side": 1,
      "message": "Do not collect yet.",
      "range": {
        "startLine": 69,
        "startChar": 14,
        "endLine": 69,
        "endChar": 44
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bf50be3_74fb9008",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/its/base/workflow/commit_collector/SinceLastTagCommitCollector.java",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2020-03-29T16:16:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29eafdbf_981c1b79",
      "range": {
        "startLine": 69,
        "startChar": 14,
        "endLine": 69,
        "endChar": 44
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30c12b5c_2a5f0afb",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/its/base/workflow/FireEventOnCommitsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-06-11T07:53:22Z",
      "side": 1,
      "message": "No assertions? I blanked the implementation and the test passed anyway.",
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61701795_74fa2872",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/its/base/workflow/FireEventOnCommitsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2018-06-13T14:27:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30c12b5c_2a5f0afb",
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "015cda84_3b38ab07",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/its/base/workflow/FireEventOnCommitsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-06-11T07:53:22Z",
      "side": 1,
      "message": "No assertions? I blanked the implementation and the test passed anyway.",
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8327ffef_b81988ad",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/its/base/workflow/FireEventOnCommitsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2018-06-13T14:27:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "015cda84_3b38ab07",
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c328cac_bfbc4e41",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/its/base/workflow/FireEventOnCommitsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-06-11T07:53:22Z",
      "side": 1,
      "message": "Is this the only expectation? I blanked the implementation and the test passed anyway.",
      "range": {
        "startLine": 58,
        "startChar": 4,
        "endLine": 58,
        "endChar": 71
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48728fbc_8620e865",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/its/base/workflow/FireEventOnCommitsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2018-06-13T14:27:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c328cac_bfbc4e41",
      "range": {
        "startLine": 58,
        "startChar": 4,
        "endLine": 58,
        "endChar": 71
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00c89a84_2274f84f",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/its/base/workflow/FireEventOnCommitsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 95,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-06-11T07:53:22Z",
      "side": 1,
      "message": "Is this the only expectation? If yes, the method name is not telling the truth: names should reflect what the method is doing, but this one is not asserting or testing anything on the wrong number of parameters.\n\nAdditionally, it is not a test method itself and calling it \u0027test\u0027 is misleading.",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 95,
        "endChar": 64
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42e2bad6_dea24a08",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/its/base/workflow/FireEventOnCommitsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 95,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2018-06-13T14:27:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00c89a84_2274f84f",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 95,
        "endChar": 64
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8151370b_67cfd10f",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/its/base/workflow/FireEventOnCommitsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 129,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-06-11T07:53:22Z",
      "side": 1,
      "message": "Put those at the beginning of the class",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 129,
        "endChar": 3
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e9c862d_ce6dcce6",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/its/base/workflow/FireEventOnCommitsTest.java",
        "patchSetId": 5
      },
      "lineNbr": 129,
      "author": {
        "id": 1057319
      },
      "writtenOn": "2018-06-13T14:27:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8151370b_67cfd10f",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 129,
        "endChar": 3
      },
      "revId": "26d11724dedf933b009145308c444fc35911add3",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}